name: CI/CD Pipeline
on: [push, pull_request, workflow_dispatch]

jobs:
  verify:
    runs-on: ubuntu-latest
    if: "!startsWith(github.event.head_commit.message, 'chore') && !startsWith(github.ref, 'refs/tags/v')"
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'

      - name: installing dependencies
        run: mvn install

  test:
    runs-on: ubuntu-latest
    if: "!startsWith(github.event.head_commit.message, 'chore') && !startsWith(github.ref, 'refs/tags/v')"
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'

      - name: building project
        run: mvn clean compile

      - name: running unit tests
        run: mvn verify -fae -DskipITs $MVN_ARGS

      - name: publishing code coverage report
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          curl -s https://codecov.io/bash > $HOME/codecov-bash.sh && chmod +x $HOME/codecov-bash.sh
          build/publishCodeCoverage.sh

      - name: running integration tests
        env:
          ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
          FINDINGS_ENV: ${{ secrets.FINDINGS_ENV }}
          NOTIFICATIONS_ENV: ${{ secrets.NOTIFICATIONS_ENV }}
          CONFIGURATION_GOVERNANCE_ENV: ${{ secrets.CONFIGURATION_GOVERNANCE_ENV }}
          RESOURCE_GROUP_ID: ${{ secrets.RESOURCE_GROUP_ID }}
        run: build/testScript.sh

  release:
    runs-on: ubuntu-latest
    needs: [verify, test]
    if: "github.event_name == 'push' && github.ref == 'refs/heads/main' && !startsWith(github.event.head_commit.message, 'chore')"
    steps:
      - name: setup extensions
        uses: actions/checkout@v1

      - name: setup nodejs
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: release using semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          GIT_AUTHOR_NAME: sccdeveloper
          GIT_AUTHOR_EMAIL: scccomm@in.ibm.com
          GIT_COMMITTER_NAME: sccdeveloper
          GIT_COMMITTER_EMAIL: scccomm@in.ibm.com
        run: |
          sudo apt-get update
          sudo apt-get install python
          pip install --user bumpversion
          npm install @semantic-release/changelog
          npm install @semantic-release/exec
          npm install @semantic-release/git
          npm install @semantic-release/github
          npx semantic-release

  publish:
    runs-on: ubuntu-latest
    if: "github.event_name == 'push' && contains(github.ref, 'refs/tags')"
    steps:
      - name: setup extensions
        uses: actions/checkout@v1

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'

      - name: publish to maven central
        run: mvn deploy $MVN_ARGS -DskipITs -P central

  documentation:
    runs-on: ubuntu-latest
    if: "github.event_name == 'push' && contains(github.ref, 'refs/tags')"
    steps:
      - name: setup extensions
        uses: actions/checkout@v1

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'

      - name: generate javadoc
        run: build/prepareJavadoc.sh
      
      - name: deploy javadocs to gh-pages
        uses: crazy-max/ghaction-github-pages@v1
        with:
          target_branch: gh-pages
          build_dir: javadocs
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          GIT_AUTHOR_NAME: sccdeveloper
          GIT_AUTHOR_EMAIL: scccomm@in.ibm.com
          GIT_COMMITTER_NAME: sccdeveloper
          GIT_COMMITTER_EMAIL: scccomm@in.ibm.com
